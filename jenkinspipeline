pipeline {
    agent any

    environment {
        ANSIBLE_HOST_KEY_CHECKING = 'False'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    git url: 'https://github.com/bramplatier/ansible.git', branch: 'main'
                }
            }
        }

        stage('Deploy to Test') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'vault-pass', variable: 'VAULT_PASS')]) {
                        sh ''' 
                            echo "$VAULT_PASS" > vault_pass.txt 
                        '''

                        sh '''
                            ansible-playbook test/beheer.yml -i test/inventory.ini --vault-password-file vault_pass.txt
                        '''
                    }
                }
            }
        }

        stage('Approval for Production') {
            steps {
                script {
                    input message: 'Bevestig om door te gaan naar productie?', ok: 'Doorgaan naar productie'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'vault-pass', variable: 'VAULT_PASS')]) {
                        sh ''' 
                            echo "$VAULT_PASS" > vault_pass.txt 
                        '''

                        sh '''
                            ansible-playbook main/beheer.yml -i main/inventory.ini --vault-password-file vault_pass.txt
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            sh 'rm -f vault_pass.txt'
        }
        success {
            echo 'Deployment completed successfully!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
